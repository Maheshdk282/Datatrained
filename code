import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# Load the CSV file
file_path = 'Sales_LinReg.csv'  # Adjust the path as necessary
data = pd.read_csv(file_path)

# Display the first few rows of the dataframe to ensure it's loaded correctly
print(data.head())
# Checking for missing values
missing_values = data.isnull().sum()
print("Missing Values:\n", missing_values)

# Filling missing values with the mean of the respective columns
data['Republic'] = data['Republic'].fillna(data['Republic'].mean())
data['NDTV'] = data['NDTV'].fillna(data['NDTV'].mean())
data['TV9'] = data['TV9'].fillna(data['TV9'].mean())
data['AajTak'] = data['AajTak'].fillna(data['AajTak'].mean())

# Verifying that there are no missing values left
missing_values_after = data.isnull().sum()
print("Missing Values After Cleaning:\n", missing_values_after)


# Plotting the relationships
sns.pairplot(data)
plt.show()
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Defining features and target variable
X = data.drop('sales', axis=1)
y = data['sales']

# Splitting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Creating and training the model
model = LinearRegression()
model.fit(X_train, y_train)

# Making predictions
y_pred = model.predict(X_test)

# Evaluating the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

Output:

   Republic  NDTV   TV5   TV9  AajTak  sales
0       8.7  48.9   4.0  75.0    49.0    7.2
1      57.5  32.8  65.9  23.5    57.5   11.8
2     120.2  19.6   7.2  11.6    18.5   13.2
3       8.6   2.1  46.0   1.0     2.6    4.8
4     199.8   2.6  52.9  21.2     2.9   10.6
Missing Values:
 Republic    10
NDTV         5
TV5          0
TV9          8
AajTak       5
sales        0
dtype: int64
